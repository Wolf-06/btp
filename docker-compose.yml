networks:
  lan-net:   #faster connection b/w device-edge
    driver: bridge

  wan-net:    #slower connection b/w server-edge 
    driver: bridge

services:
# mqtt-broker:
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: mqtt
    restart: unless-stopped
    networks:
      - wan-net
      - lan-net
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosq/config:/mosquitto/config
      - ./mosq/data:/mosq/data
      - ./mosq/log:/mosq/log

  # edgeNode configuration
  # edge_node:
  #   build: ./edgeNode
  #   depends_on:
  #     - mqtt
  #   # restart: on-failure
  #   networks:
  #     - wan-net
  #     - lan-net
  #   cap_add:
  #     - NET_ADMIN
  #   # UPDATE THIS: This command now includes the network impairment logic
  #   volumes:
  #     - ./result:/app/results
  #   # command: >
  #     # sh -c "
  #     #   sleep 5 &&
  #     #   echo 'Applying 150ms latency with 20ms jitter to Edge Node network...' &&
  #     #   tc qdisc add dev eth0 root netem delay 150ms 20ms distribution normal &&
  #     #   echo 'Edge Node is up, starting application...' &&
  #     #   python edge_node.py
  #     # "
  #   environment:
  #     - MQTT_BROKER_HOST=mqtt
  #     - EDGE_ID=edgeNode_1
  #     - LOG_LEVEL=INFO
  #     - CRYPTO_MODE="ECC"  # use PQC or ECC 
  #     - DEVICE_PSK=my_super_secret_32_byte_aes_key!
  # #resources limit for edge note
  #   cpus: '0.50'
  #   mem_limit: 256M

  #server configuration
  server:
    build: ./server
    depends_on:
      - mqtt
    networks:
      - wan-net
    # restart: on-failure
    environment:
      - MQTT_BROKER_HOST=mqtt
      - LOG_LEVEL=INFO
      - CRYPTO_MODE="PQC"  # use PQC or ECC
    volumes:
      - ./server/server_data:/app/data
      - ./result:/app/results

    ##device configuration
  # device:
  #   build: ./device
  #   networks:
  #     - lan-net
  #   depends_on:
  #     - mqtt
  #   environment:
  #     - MQTT_BROKER_HOST=mqtt
  #     - NUM_DEVICES=10
  #     - DEVICE_PSK=my_super_secret_32_byte_aes_key!
